NPU task
========
Программа-эмулятор сетевого процессора позволяет реализовывать модельные программы обработки пакетов на ассемблере. 
На вход подается программа, входной ``.pcap``-файл, директория с выходными ``.pcap``-файлами для проверки результата запуска, файл конфигурации таблиц коммутации. Сетевой процессор представлен конвейером из стадии парсера, стадий классификаторов Match-Action, стадии депарсера. Процессор может работать с 8 портами.

Зависимости
-----------
Для работы необходим Python3 и пакеты ``scapy`` и ``ply``. Предусмотрен скрипт для создания виртуального окружения ``venv.sh``. 

Запуск
------
Для быстрого запуска примера L2-коммутатор:

::

  ./venv.sh
  ./l2sw-example.sh


Опции для запуска:

``[-h] [-i PCAP] [-o DIR] [-t JSON] [--debug] ASM``

* ``ASM`` -- файл с программой на ассемблере;

* ``-t JSON``, ``--tables JSON`` -- указать ``.json``-файл конфигурации таблиц для запуска;

* ``-i PCAP``, ``--input PCAP`` -- указать ``.pcap``-файл с входным пакетами для процессора;

* ``-o DIR``, ``--output DIR`` -- указать директорию с ``.pcap``-файлами, содержащими выходные пакеты, в формате ``*<port>.pcap``;

* ``--debug`` -- режим отладки программы на ассемблере, позволяет увидеть последовательность выполнения инструкций и дампы памяти;

* ``-h``, ``--help`` -- справка.

Примеры всех конфигурационных файлов можно найти в папке ``examples``.

Структура программы
-------------------
Программа должна состоять как минимум из трех секций:
* ``.parser`` -- секция кода парсера, предназначенная для выделения полей из памяти HEADER и память PHV и разбора заголовка пакета;
* ``.match_action ID`` -- одна или более секций кода стадий-классификаторов Match-Action, предназначенных для поиска данных в таблице коммутации и обработки результата, каждая из которых должна иметь уникальный идентификатор ``ID``;
* ``.deparser`` -- секция кода депарсера, предназначенная для загрузки обновленных данных заголовка из PHV в память HEADER.

Пример программы для L2-коммутатора можно найти в папке ``examples``.

Макросы контекста пакета
------------------------
======== =========
Макрос   Значение
======== =========
HEADER   Адрес памяти, хранящей заголовок пакета
-------- ---------
PHV      Адрес памяти, хранящей вектор полей разобранного заголовка
-------- ---------
PORTMASK Адрес памяти, хранящей маску выходных портов для пакета
======== =========


Инструкции парсера
------------------
Парсер имеет два 16-байтных регистра r1 и r2.

+--------+------------+------------+----------+
|store   | <PHV>      | <HEADER>   | <length> |
+--------+------------+------------+----------+
|mov     | <register>/|<value>/    |<length>  |
|        | <memory>   |<register>/ |          |
|        |            |<PHV>       |          |
+--------+------------+------------+----------+
|or      | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|and     | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|xor     | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|cmpje   | <register> | <value>    | <label>  |
+--------+------------+------------+----------+
|cmpjn   | <register> | <value>    | <label>  |
+--------+------------+------------+----------+
| j      | <label>    |            |          |
+--------+------------+------------+----------+

Инструкции Match-Action
-----------------------
Блоки данного типа имеют 3 16-байтных регистра r1, r2, r3.

+--------+------------+------------+----------+
|mov     | <register>/|<value>/    |<length>  |
|        | <memory>   |<register>/ |          |
|        |            |<memory>    |          |
+--------+------------+------------+----------+
|or      | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|and     | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|xor     | <register>/|<value>/    |          |
|        | <portmask> |<register>  |          |
+--------+------------+------------+----------+
|mod     | <register> |<value>/    |          |
|        |            |<register>  |          |
+--------+------------+------------+----------+
|shl     | <register> |<value>     |          |
+--------+------------+------------+----------+
|shr     | <register> |<value>     |          |
+--------+------------+------------+----------+
|cmpje   | <register> | <value>    | <label>  |
+--------+------------+------------+----------+
|cmpjn   | <register> | <value>    | <label>  |
+--------+------------+------------+----------+
| j      | <label>    |            |          |
+--------+------------+------------+----------+
| call   | <procedure>|            |          |
+--------+------------+------------+----------+

Инструкции депарсера
--------------------
+--------+------------+---------+----------+
|load    | <header>   | <phv>   | <length> |
+--------+------------+---------+----------+

Баги, ограничения, интересные факты
-----------------------------------
* Нет возможности расширить числа, помещающиеся в один байт, до желаемого размера, т.е. инструкция ``and r1, 0x0001`` будет иметь смысл  ``and r1, 0x01``.
* Нельзя "расширить" 0 до нестандартного размера при записи в регистр, т.е. операции ``mov r1, 0, 16`` или ``mov r1, 0, 3`` запрещены. Для обнуления регистра можно воспользоваться ``xor r1, r1``.
* При логировании память HEADER отображается в ``Big-Endian``, память процессоров -- в ``Little-Endian``.
* Нумерация секций кода ``match_action`` должна соответствовать нумерации в файле конфигурации таблиц коммутации.
* Нумерация секций ``match_action`` в коде не имеет значения для выполнения, поскольку они выполняются в порядке появления в файле.
* Для каждого нового пакета, обрабатываемого стадией, все регистры, PHV и PORTMASK обнулены.
* Перед записью в регистр процедура поиска обнуляет его. Если регистр не используется, этого не происходит. То есть, регистр r1 не обнуляется, если ключ не был найден.
